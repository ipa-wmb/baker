<?xml version="1.0"?>
<launch>

	<arg name="scitos_node_args" default="-k127.0.0.1:1234"/>
	<arg name="brush_cleaning_module_interface_args" default="-k127.0.0.1:1234"/>
	<arg name="vacuum_cleaning_module_interface_args" default="-k127.0.0.1:1234"/>
	<arg name="obstacle_map_channel" default="/navigation/laser/Map"/>	<!-- /3d/MergedMap or /navigation/laser/Map -->
	<arg name="spectral_dirt_detection" default="True"/>

	<!-- ROS-MIRA communication -->
	<include file="$(find scitos_mira)/launch/scitos_mira.launch">
		<arg name="scitos_node_args" value="$(arg scitos_node_args) --using /ObstacleMap=$(arg obstacle_map_channel)"/>
	</include>
	
	<!-- include ROS_MIRA communication module to brush cleaner -->
	<!--include file="$(find baker_brush_cleaning_module_interface)/launch/brush_cleaning_module_interface.launch">
		<arg name="brush_cleaning_module_interface_args" value="$(arg brush_cleaning_module_interface_args)"/>
	</include-->

	<!-- include ROS_MIRA communication module to vacuum cleaner -->
	<include file="$(find baker_vacuum_cleaning_module_interface)/launch/vacuum_cleaning_module_interface.launch">
		<arg name="vacuum_cleaning_module_interface_args" value="$(arg vacuum_cleaning_module_interface_args)"/>
	</include>

	<!-- map management system -->
	<node pkg="baker_wet_cleaning_application" type="map_management_client" name="map_management_client" output="screen" respawn="true" respawn_delay="2">
		<remap from="~map" to="/map"/>
		<remap from="~map_segmented" to="/map_segmented"/>
	</node>

	<!-- include room exploration -->
	<include file="$(find ipa_room_exploration)/ros/launch/room_exploration_action_server.launch"/>
	
	<!-- include coverage monitor -->
	<include file="$(find ipa_room_exploration)/ros/launch/coverage_monitor_server.launch"/>

	<!-- include room segmentation -->
	<include file="$(find ipa_room_segmentation)/ros/launch/room_segmentation_action_server.launch"/>

	<!-- include room sequence planning -->
	<include file="$(find ipa_building_navigation)/ros/launch/room_sequence_planning_action_server.launch"/>

	<!-- include map accessibility analysis -->
	<include file="$(find cob_map_accessibility_analysis)/ros/launch/map_accessibility_analysis.launch"/>
	
	<!-- dirt and trash fake detector -->
	<node unless="$(arg spectral_dirt_detection)" pkg="baker_wet_cleaning_application" type="fake_trash_dirt_detector_server.py"
	name="fake_trash_dirt_detector" output="screen" respawn="true" respawn_delay="2" args="--dirt --trash"/>

    <!-- If using real dirt_detection -->
    <group  if="$(arg spectral_dirt_detection)">
        <!-- only trash fake detector (if real_robot) -->
        <node pkg="baker_wet_cleaning_application" type="fake_trash_dirt_detector_server.py"
        name="fake_trash_dirt_detector" output="screen" respawn="true" respawn_delay="2" args="--trash"/>

        <!--start real dirt detector -->
	<!--
        <include file="$(find ipa_dirt_detection)/ros/launch/dirt_detection_spectral.launch">
            <arg name="colored_point_cloud_topic" value="/camera2_pcl"/>
        </include>
	-->
        <include file="$(find ipa_dirt_detection)/ros/launch/dirt_detection_ml.launch">
            <arg name="colored_point_cloud_topic" value="/camera2_pcl"/>
        </include>
    </group>


	<!-- application script -->
	<node pkg="baker_wet_cleaning_application" type="application_wet_cleaning.py" name="application_wet_cleaning" output="screen" respawn="true" respawn_delay="2"/>

</launch>
